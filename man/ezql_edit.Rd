% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sql.R
\name{ezql_edit}
\alias{ezql_edit}
\title{Edit a SQL Table with Data Type Handling}
\usage{
ezql_edit(
  df,
  table,
  schema = NULL,
  database = NULL,
  address = NULL,
  delete_missing_rows = FALSE,
  rosetta = NULL,
  names_column_r = "r",
  names_column_sql = "sql",
  type_function_column = "r_type"
)
}
\arguments{
\item{df}{A data frame containing the new data for the SQL table.}

\item{table}{A string specifying the name of the target SQL table.}

\item{schema}{A string specifying the schema of the table. Defaults to the value
retrieved from \code{ezql_details_schema()}.}

\item{database}{A string specifying the database name. Defaults to the value
retrieved from \code{ezql_details_db()}.}

\item{address}{A string specifying the server address. Defaults to the value
retrieved from \code{ezql_details_add()}.}

\item{delete_missing_rows}{Logical. If \code{TRUE}, rows in the SQL table but not
in the data frame are deleted. Defaults to \code{FALSE}.}

\item{rosetta}{A data frame (or tibble) used for column-level data type transformations
and column name mapping. This should contain at least two columns: one for column names
in the data frame, and one for column names in the SQL table. Optionally, a column for
type transformation functions can be included. Defaults to \code{NULL}, meaning no
transformations or name mapping will be applied.}

\item{names_column_r}{A string specifying the column in the \code{rosetta} data frame
that contains the names of the columns in the data frame. Defaults to \code{"r"}.}

\item{names_column_sql}{A string specifying the column in the \code{rosetta} data frame
that contains the names of the columns in the SQL table. Defaults to \code{"sql"}.}

\item{type_function_column}{A string specifying the column in the \code{rosetta} data frame
that contains the type transformation functions for the corresponding columns. Defaults to \code{"r_type"}.}
}
\value{
A list summarizing the number of rows added, updated, and deleted:
\itemize{
  \item \code{added}: Number of rows added to the table.
  \item \code{altered}: Number of rows updated in the table.
  \item \code{deleted}: Number of rows deleted from the table, if \code{delete_missing_rows = TRUE}.
}
}
\description{
A wrapper function that combines adding, updating, and deleting rows in a SQL table
based on a data frame. Allows for a comprehensive table update in one step, with
optional data type transformations and column name mapping.
}
\details{
This function performs a full edit of the specified SQL table by:
\enumerate{
  \item Mapping column names in the data frame to match those in the SQL table
        using the \code{rosetta} data frame, if provided.
  \item Adding new rows present in the data frame but not in the SQL table.
  \item Updating rows in the SQL table that differ from the corresponding rows in the data frame.
  \item Optionally deleting rows in the SQL table that are not present in the data frame
        (if \code{delete_missing_rows = TRUE}).
}

If \code{rosetta} is provided, the function applies the specified type transformations
and column name mappings before attempting any operations. Columns not listed
in the \code{rosetta} will remain unchanged.

The \code{rosetta} data frame must have:
\itemize{
  \item One column (specified by \code{names_column_r}) listing the column names in the data frame.
  \item One column (specified by \code{names_column_sql}) listing the corresponding column names in the SQL table.
  \item Optionally, one column (specified by \code{type_function_column}) containing the names of functions
        to be applied for data type transformations.
}
}
\examples{
\dontrun{
# Edit a table by adding, updating, and optionally deleting rows
result <- ezql_edit(
  df = new_data,
  table = "my_table",
  schema = "dbo",
  database = "my_database",
  address = "my_server",
  delete_missing_rows = TRUE
)
print(result)

# Edit a table with column mapping and type transformations using a rosetta data frame
rosetta <- tibble::tibble(
  r = c("local_column1", "local_column2"),
  sql = c("db_column1", "db_column2"),
  r_type = c("as.character", "as.numeric")
)

result <- ezql_edit(
  df = new_data,
  table = "my_table",
  schema = "dbo",
  database = "my_database",
  address = "my_server",
  delete_missing_rows = TRUE,
  rosetta = rosetta
)
print(result)
}

}
\seealso{
\code{\link{ezql_add_data}}, \code{\link{ezql_alter_data}}, \code{\link{ezql_delete_data}}, \code{\link{ezql_check_table}}
}
